git remote show origin
* remote origin
  Fetch URL: https://github.com/mike1krueger/Troop706.git
  Push  URL: https://github.com/mike1krueger/Troop706.git
 
 Setup ssh keys to enable sharing of files from command line

 git add . (adds all modified files)
 git commit -m "describe content of your commit"
 git branch -r (list remote branches)
 git push -u origin <branch> e.g. git push -u origin email_form
 
 
 using xampp - local web server you can configure SMTP mail.  SMTP mail is called from the PHP script when generating emails from Troop 706 website.
 
copy your entire web project to e.g.  C:\media\xamppInstall\htdocs
 Start xampp apache service
 using your browser, enter url localhost
 
 
 SMTP CONFIGURATION - NOT NEEDED WHEN USING PHPMAILER
 1) modify php.ini file which is within the xampp file system- enabling SMTP services
 1.1) e.g. 
	smtp_server=smtp.gmail.com
	smtp_port=587
	sendmail_from = krueger.mike@gmail.com
	sendmail_path = "\"C:\media\xamppInstall\sendmail\sendmail.exe\" -t" 
 2) modify sendmail.ini 
 2.1) e.g. 
		smtp_server=smtp.gmail.com
		smtp_port=587
		error_logfile=error.log
		debug_logfile=debug.log
		auth_username=krueger.mike@gmail.com
		auth_password=secretpasswordhere
		force_sender=krueger.mike@gmail.com
 
 ===================================
 Working with git from STS eclipse
 
start by traversing to "master" branch; 
then pull in changed files that might have been added to this branch that were 
added to the remote github branch
e.g. 
git status (confirm your on master)
git pull   (pulls changes from master and merges into local branch such that local and remote match)
Now your ready to start on your new feature 

Your workflow will look like this

1) change to branch "master" for local branch
2) (git fetch origin) get source from remote github
3) (git branch yourNewBranch) creates a new branch from master
4) (git checkout yourNewBranch) switch branches
5) (git add yourchanged files or .) add files to your brachn
6) (git commit -m "describe your change") 
7) (git push --set-upstream origin yourNewBranch) tell remote about your new branch
8) (git push origin) push your current branch changes upto github
 
 Almost done, last step is to sign into github and create a pull request to merge
 your branch into github master branch.  This effectively consolidates changes into single
 location that is backed up on github.  Ultimately, this can be propagated to web hosting site 
 such as goDaddy
 